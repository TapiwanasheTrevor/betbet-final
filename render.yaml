# BetBet Platform - Render Blueprint (Fixed)
services:
  # PostgreSQL Database
  - type: pserv
    name: betbet-postgres
    env: postgres
    plan: starter
    databases:
      - name: betbet

  # Redis Cache
  - type: redis
    name: betbet-redis
    plan: starter

  # Frontend Service
  - type: web_service
    name: betbet-frontend
    env: node
    plan: starter
    buildCommand: cd frontend && npm ci && npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
        sync: false
      - key: CLERK_SECRET_KEY
        sync: false
      - key: NODE_ENV
        value: production

  # User Profile Service
  - type: web_service
    name: betbet-user-profile
    env: python
    plan: starter
    buildCommand: cd backend && pip install -r requirements.txt
    startCommand: cd backend/services/user_profile && PYTHONPATH=../.. python -m uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: betbet-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: betbet-redis
          property: connectionString
      - key: CLERK_SECRET_KEY
        sync: false
      - key: CLERK_WEBHOOK_SECRET
        sync: false
      - key: CLERK_DOMAIN
        value: betbet.co.zw
      - key: MONGODB_URL
        sync: false

  # Game Engine Service
  - type: web_service
    name: betbet-game-engine
    env: python
    plan: starter
    buildCommand: cd backend && pip install -r requirements.txt
    startCommand: cd backend/services/game_engine && PYTHONPATH=../.. python -m uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: betbet-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: betbet-redis
          property: connectionString
      - key: MONGODB_URL
        sync: false

  # Betting Market Service
  - type: web_service
    name: betbet-betting-market
    env: python
    plan: starter
    buildCommand: cd backend && pip install -r requirements.txt
    startCommand: cd backend/services/betting_market && PYTHONPATH=../.. python -m uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: betbet-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: betbet-redis
          property: connectionString
      - key: MONGODB_URL
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false