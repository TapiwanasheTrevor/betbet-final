# BetBet Platform - Render Deployment Configuration
# Simplified deployment with essential services

services:
  # =============================================================================
  # Database Services
  # =============================================================================

  - type: pgsql
    name: betbet-postgres
    databaseName: betbet
    user: betbet
    plan: starter

  - type: redis
    name: betbet-redis
    plan: starter

  # =============================================================================
  # Backend Services
  # =============================================================================

  # User Profile Service
  - type: web
    name: betbet-user-profile
    runtime: python
    plan: starter
    branch: main
    rootDir: backend
    buildCommand: |
      pip install -r requirements.txt
    startCommand: |
      cd services/user_profile
      python -c "import sys; sys.path.append('../..'); import main"
      python -m uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: betbet-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: betbet-redis
          property: connectionString
      - key: CLERK_SECRET_KEY
        sync: false
      - key: CLERK_WEBHOOK_SECRET
        sync: false
      - key: CLERK_DOMAIN
        value: betbet.co.zw
      - key: MONGODB_URL
        sync: false

  # Game Engine Service
  - type: web
    name: betbet-game-engine
    runtime: python
    plan: starter
    branch: main
    rootDir: backend
    buildCommand: |
      pip install -r requirements.txt
    startCommand: |
      cd services/game_engine
      python -c "import sys; sys.path.append('../..'); import main"
      python -m uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: betbet-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: betbet-redis
          property: connectionString
      - key: MONGODB_URL
        sync: false
      - key: CLERK_SECRET_KEY
        sync: false
      - key: CLERK_DOMAIN
        value: betbet.co.zw

  # Betting Market Service
  - type: web
    name: betbet-betting-market
    runtime: python
    plan: starter
    branch: main
    rootDir: backend
    buildCommand: |
      pip install -r requirements.txt
    startCommand: |
      cd services/betting_market
      python -c "import sys; sys.path.append('../..'); import main"
      python -m uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: betbet-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: betbet-redis
          property: connectionString
      - key: CLERK_SECRET_KEY
        sync: false
      - key: CLERK_DOMAIN
        value: betbet.co.zw

  # =============================================================================
  # Frontend Service
  # =============================================================================

  - type: web
    name: betbet-frontend
    runtime: node
    plan: starter
    branch: main
    rootDir: frontend
    buildCommand: npm ci && npm run build
    startCommand: npm start
    envVars:
      - key: NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
        sync: false
      - key: CLERK_SECRET_KEY
        sync: false
      - key: NEXT_PUBLIC_API_URL
        value: https://betbet-user-profile.onrender.com
      - key: NODE_ENV
        value: production